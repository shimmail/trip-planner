<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.itineraryservice.mapper.ItineraryMapper">
    <update id="updateItinerary">
        UPDATE `tp-itineraries`
        <set>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="destinationId != 0">
                destination_id = #{destinationId},
            </if>
            <if test="endDate != null">
                end_date = #{endDate},
            </if>
            <if test="startDate != null">
                start_date = #{startDate},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
        </set>
        WHERE id = #{id};
    </update>


    <select id="pageListItinerariesById" resultType="org.example.itineraryservice.pojo.entity.Itinerary">
        SELECT `tp-itineraries`.id, user_id, destination_id, description, start_date, end_date, status, created_at, updated_at FROM `tp-itineraries`.`tp-itineraries`
        WHERE user_id = #{id}
        LIMIT #{page}, #{size};
    </select>
    <select id="listItinerariesById" resultType="org.example.itineraryservice.pojo.entity.Itinerary">
        SELECT `tp-itineraries`.id, user_id, destination_id, description, start_date, end_date, status, created_at, updated_at FROM `tp-itineraries`.`tp-itineraries`
        WHERE user_id = #{id}
    </select>
    <select id="saveItinerary">
        INSERT INTO `tp-itineraries`.`tp-itineraries` (created_at, description, destination_id, end_date, id, start_date, status, updated_at, user_id)
        VALUES (#{createdAt}, #{description}, #{destinationId}, #{endDate}, #{id}, #{startDate}, #{status}, #{updatedAt}, #{userId});
    </select>
    <select id="getItinerariesById" resultType="org.example.itineraryservice.pojo.entity.Itinerary">
        SELECT `tp-itineraries`.id, user_id, destination_id, description, start_date, end_date, status, created_at, updated_at FROM `tp-itineraries`.`tp-itineraries`
        WHERE user_id = #{id}
        LIMIT 0, 1;
    </select>
</mapper>

