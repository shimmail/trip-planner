server:
  port: 8080
spring:
  application:
    name: gateway
  cloud:
    nacos:
      server-addr: 192.168.184.130:8850 # nacos地址
    gateway:
      routes:
        - id: user-service # 路由规则id，自定义，唯一
          uri: lb://user-service
          predicates:
            - Path=/user/**

        - id: itinerary-service
          uri: lb://itinerary-service
          predicates:
            - Path=/itinerary/**
          filters:
            - AddRequestHeader=key, value

        - id: destination-service
          uri: lb://destination-service
          predicates:
            - Path=/destination/**
          filters:
            - AddRequestHeader=key, value
  redis:
    host: 192.168.184.130     # Redis服务器地址
    database: 1               # Redis数据库索引（默认为0）
    port: 6379                # Redis服务器连接端口
    timeout: 3000             # 连接超时时间（毫秒）
    lettuce:
      pool:
        max-active: 1000    # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10        # 连接池中的最大空闲连接
        min-idle: 5         # 连接池中的最小空闲连接

gateway:
  ignoreUrls:
    - /user/**
knife4j:
  gateway:
    enabled: true
    strategy: manual
    discover:
      enabled: true
      version: openapi3
      excluded-services:
        - gateway-service
    routes:
      - name: user-service
        service-name: user-service
        context-path: /
        url: /user-service/v3/api-docs?group=user-service
        order: 1

      - name: itinerary-service
        service-name: itinerary-service
        context-path: /
        url: /itinerary-service/v3/api-docs?group=order-service
        order: 2

      - name: destination-service
        service-name: destination-service
        context-path: /
        url: /destination-service/v3/api-docs?group=finance-service
        order: 3
